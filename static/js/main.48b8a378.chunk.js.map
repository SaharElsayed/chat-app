{"version":3,"sources":["assets/images/user.svg","components/Avatar/index.js","components/Header/index.js","components/Message/index.js","components/Button/index.js","components/Input/index.js","components/Footer/index.js","containers/Conversation/index.js","App.js","reportWebVitals.js","index.js"],"names":["Avatar","avatar","size","extraClass","className","src","alt","defaultProps","user","Header","name","Message","sender","body","date","isLastInterlocutorMsg","Button","theme","text","isDisabled","disabled","Input","type","placeholder","value","onChangeHandler","onChange","e","Footer","useState","msg","setMsg","target","length","Conversation","scrollToBottom","messagesEnd","scrollIntoView","behavior","this","conversationData","interlocutorMsgs","filter","item","lastInterlocutorMsg","map","id","renderConversation","Converstation","ref","el","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48b8a378.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.c2f3f511.svg\";","import React from 'react';\r\nimport user from './../../assets/images/user.svg';\r\nimport './styles.scss';\r\n\r\n/*\r\n  Avatar component for general used\r\n  @props: {avatar, size: 'small' | 'large', extraClass}\r\n*/\r\nconst Avatar = ({avatar, size, extraClass}) => {\r\n  return (\r\n    <div className={`avatar-wrapper-${size} d-flex flex-center justify-center ${extraClass}`}>\r\n      <img className={`user-vatar-${size}`}  src={avatar} alt=\"interlocutor icon\" />\r\n    </div>\r\n  )\r\n}\r\n \r\nAvatar.defaultProps = {\r\n avatar: user,\r\n size: 'small',\r\n extraClass: ''\r\n};\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport Avatar from '../Avatar';\r\nimport './styles.scss';\r\n\r\n/*\r\n  Header component for general used\r\n  @props: {name}\r\n*/\r\nconst Header = ({name}) => {\r\n  return ( \r\n    <div className=\"conversataion-header d-flex flex-center\">\r\n      <Avatar size=\"large\" extraClass=\"mr-10\" />\r\n      <h3 className=\"user-name mb-0\">{name}</h3>\r\n    </div>\r\n  \r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  name: 'Marc'\r\n };\r\n\r\nexport default Header;","import React from 'react';\r\nimport Avatar from '../Avatar';\r\nimport './styles.scss';\r\n\r\n/*\r\n  Message component for general used\r\n  @props: {sender: 'user' | 'interlocutor', body, date, isLastInterlocutorMsg: true | false}\r\n*/\r\nconst Message = ({sender, body, date, isLastInterlocutorMsg }) =>  ( \r\n  <div className={`d-flex  ${sender === 'user' ? 'justify-end' : 'flex-center'}`}>\r\n    {\r\n      (sender === 'interlocutor' && isLastInterlocutorMsg) &&\r\n      <Avatar size=\"small\" extraClass=\"mr-10\" /> \r\n    }\r\n    <div className={`msg ${sender}-msg ${sender === 'interlocutor' && !isLastInterlocutorMsg ? 'ml-50' : ''}`}>\r\n      <p>{body}</p>\r\n      <small>{date}</small>\r\n    </div>\r\n  </div>\r\n  );\r\nexport default Message;","import React from 'react';\r\nimport \"./styles.scss\";\r\n\r\n/*\r\n  Button component for general used\r\n  @props: { theme, text, isDisabled}\r\n*/\r\nconst Button = ({theme, text, isDisabled}) =>  ( \r\n  <button disabled={isDisabled} className={`btn ${theme}`}>\r\n    {text}\r\n  </button>\r\n);\r\n\r\nexport default Button;","import React from 'react';\r\nimport \"./styles.scss\";\r\n\r\n/*\r\n  Input component for general used\r\n  @props: {type, placeholder, value, onChangeHandler}\r\n*/\r\n\r\nconst Input = ({type, placeholder, value, onChangeHandler}) => {\r\n  return ( \r\n    <input \r\n      className='input'\r\n      value={value}\r\n      onChange={(e) => onChangeHandler(e)}\r\n      type={type}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n}\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  placeholder: 'Type a message...'\r\n};\r\n \r\nexport default Input;","import React, {useState} from 'react';\r\nimport Button from '../Button';\r\nimport Input from '../Input';\r\nimport './styles.scss';\r\n\r\nconst Footer = () => {\r\n  const [msg, setMsg] = useState('');\r\n\r\n const handleChange = (e) => {\r\n    setMsg(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"conversation-footer d-flex flex-center\">\r\n      <Input value={msg} onChangeHandler={handleChange} />\r\n      <Button isDisabled={msg.length === 0} theme=\"primary\" text=\"Send\"  />\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Header from './../../components/Header';\r\nimport Message from '../../components/Message';\r\nimport Footer from './../../components/Footer';\r\nimport Converstation from './../../fakeData/Conversation.json';\r\nimport './styles.scss';\r\nclass Conversation extends Component {\r\n  componentDidMount() {\r\n    this.scrollToBottom();\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  renderConversation(conversationData) {\r\n    const interlocutorMsgs = conversationData.filter((item) => item.sender === 'interlocutor'),\r\n    lastInterlocutorMsg = interlocutorMsgs[interlocutorMsgs.length - 1]\r\n\r\n    return conversationData.map(({id, text, sender, date}) => (\r\n      <Message \r\n        key={`msg-${id}`} \r\n        isLastInterlocutorMsg={id === lastInterlocutorMsg['id']} \r\n        sender={sender} \r\n        body={text} \r\n        date={date} \r\n      />)\r\n    )\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"msgs-container p-20\">\r\n          {this.renderConversation(Converstation)}\r\n          <div ref={(el) => { this.messagesEnd = el;}}></div>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Conversation;","import Conversation from './containers/Conversation';\r\nimport \"./scss/base.scss\";\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n   <div className=\"App\">\r\n     <Conversation />\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}